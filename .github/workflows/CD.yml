name: Continuous Delivery

on:
    push:
        tags: ['*']

jobs:
    create_release_notes:
        runs-on: ubuntu-latest
        steps:
            - name: Create Release Notes
              id: create_release_notes
              uses: release-drafter/release-drafter@v2
              with:
                  publish: true
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build:
        runs-on: windows-latest

        steps:
            - name: Clone
              uses: actions/checkout@v1

            - name: Install .NET
              uses: actions/setup-dotnet@v1
              with:
                  # NOTE: Do not change this version without also updating MSIExtract.AppxPackage/Directory.Build.targets
                  dotnet-version: 3.1.3

            - name: Configure Visual Studio
              uses: microsoft/setup-msbuild@v1.0.0

            - name: Create signing certificate
              working-directory: .
              run: |
                & tools\make-certificate.ps1 -OutputPath src\MSIExtract.AppxPackage\cert.pfx `
                  -Password 1234 -ThumbprintFile .\src\MSIExtract.AppxPackage\thumbprint.txt

            - name: Build
              working-directory: ./src/MSIExtract.AppxPackage
              run: |
                mkdir .\bin\AppxPackages | Out-Null
                $thumbprint = Get-Content .\thumbprint.txt
                & MSBuild.exe /nologo /restore /bl /m /p:Configuration=Release /p:Platform=x64 `
                  /p:BuildAppxUploadPackageForUap=true `
                  /p:AppxBundle=Always `
                  /p:AppxPackageSigningEnabled=true `
                  /p:PackageCertificateThumbprint=$thumbprint `
                  /p:PackageCertificateKeyFile=.\cert.pfx `
                  /p:PackageCertificatePassword=1234 `
                  /t:Publish

            - name: Prepare Assets for Upload
              run: |
                cd .\bin\AppxPackages
                $uploads = (ls *.msixupload)
                mv $uploads[0].FullName MSIXExtractApp_${{ github.ref }}.msixupload
                $dirs = (ls *_Test)
                & "C:\Program Files\7-zip\7z.exe" a -r MSIXExtractApp_${{ github.ref }}_Sideload.zip $dirs[0].FullName

            - name: Upload Store Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release_notes.outputs.upload_url }}
                  asset_path: bin/AppxPackages/MSIXExtractApp_${{ github.ref }}.msixupload
                  asset_name: MSIExtractApp_${{ github.ref }}.msixupload
                  asset_type: application/zip

            - name: Upload Sideload Assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release_notes.outputs.upload_url }}
                  asset_path: bin/AppxPackages/MSIXExtractApp_${{ github.ref }}_Sideload.zip
                  asset_name: MSIExtractApp_${{ github.ref }}_Sideload.zip
                  asset_type: application/zip
